<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	default-init-method="init"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:vaadin="http://www.jdal.org/schema/vaadin"
	xmlns:jdal="http://www.jdal.org/schema/jdal"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.jdal.org/schema/jdal http://www.jdal.org/schema/jdal/jdal-core.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.jdal.org/schema/vaadin http://www.jdal.org/schema/jdal/jdal-vaadin.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:annotation-config/>
		
	<context:property-placeholder location="classpath:jdbc.properties"/>

	
	<jdbc:embedded-database id="dataSource" type="H2">
        <jdbc:script location="classpath:create.sql"/>
        <jdbc:script location="classpath:import.sql"/>
    </jdbc:embedded-database>
	
	
	<!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
    </bean>
    
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

	<!-- DAOs -->
	<jdal:service entity="org.jdal.samples.model.Category"  dao-class="org.jdal.dao.hibernate.HibernateDao" />
	
	<jdal:service entity="org.jdal.samples.model.Author" dao-class="org.jdal.samples.dao.hibernate.AuthorHibernateDao" />
	
    <jdal:service entity="org.jdal.samples.model.Book"  dao-class="org.jdal.dao.hibernate.HibernateDao" >
   		<jdal:criteria name="book" builder="bookCriteriaBuilder"/>
    </jdal:service>
    
    <bean id="contextPersistentService" class="org.jdal.logic.ContextPersistentManager" />
    
    <bean id="bookCriteriaBuilder" class="org.jdal.samples.dao.hibernate.BookCriteriaBuilder"/>
    
   <!-- UI Widgets -->
   
   <vaadin:defaults />
   
   <!-- Vaadin scoped beans are linked to UI class instances -->
   <bean id="vaadinScopeConfigurer" class="org.springframework.beans.factory.config.CustomScopeConfigurer">
   		<property name="scopes">
   			<map>
   				<entry key="vaadin" value="org.jdal.vaadin.beans.VaadinScope" />
   			</map>
   		</property>
   </bean>
   
   <bean id="uid" class="org.jdal.samples.vaadin.TestApp" scope="prototype" />
   
   <bean id="controlInitializer" class="org.jdal.vaadin.ui.bind.VaadinControlInitializer">
   		<property name="persistentService" ref="contextPersistentService" />
   </bean>

   <!-- Spring JSR-303 validator -->
   <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

   <!-- Error Processor -->
   <bean id="errorProcessor" class="org.jdal.vaadin.ui.bind.UserErrorProcessor" />  
    
   <!-- Book Table Definition -->   
   <vaadin:table entity="org.jdal.samples.model.Book" filter-form="bookFilterEditor" scope="prototype">
   	<vaadin:columns>
   		<vaadin:column name="id" display-name="ID" width="60" align="center"/>
   		<vaadin:column name="name" display-name="Name" width="300" align="left" />
   		<vaadin:column name="author" display-name="Author" width="150" align="left" sort-property-name="author.name" />
   		<vaadin:column name="category" display-name="Category" width="200" align="left" sort-property-name="category.name" />
   		<vaadin:column name="isbn" display-name="ISBN" width="150" align="left" />
   		<vaadin:column name="publishedDate" display-name="Published Date" width="150" property-editor="customDateEditor"/>
   	</vaadin:columns>
   	<!--  for serialization -->
   	<jdal:serializable-proxy />
   </vaadin:table>

	<bean id="customDateEditor" class="org.springframework.beans.propertyeditors.CustomDateEditor"
		scope="prototype">
		<constructor-arg>
			<bean class="java.text.SimpleDateFormat">
				<constructor-arg value="MM/dd/yyyy" />
			</bean>
		</constructor-arg>
		<constructor-arg value="true" />
	</bean>
   
	<!-- Book Form Editor -->
	<bean id="bookEditor" class="org.jdal.samples.vaadin.BookView" scope="prototype">
		<property name="controlInitializer" ref="controlInitializer"/>
		<property name="width" value="600" />
		<property name="height" value="300" />
		<property name="persistentService" ref="bookService" />
		<property name="errorProcessors">
			<list>
				<ref bean="errorProcessor" />
			</list>
		</property>
		<property name="validator" ref="validator" />
	</bean>
	
	<!-- View Dialog Prototype -->
	<bean id="viewDialog" class="org.jdal.vaadin.ui.form.ViewDialog" scope="prototype"/>
	
	<!-- The book Filter Editor -->
	<bean id="bookFilterEditor" class="org.jdal.samples.vaadin.BookFilterView" scope="prototype">
		<property name="controlInitializer" ref="controlInitializer" />
	</bean>
	
	<!-- Message Source -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames" value="i18n/jdal,i18n/vaadin-sample" />
	</bean>
	
	<bean id="staticMessageSource" class="org.jdal.beans.StaticMessageSource">
		<constructor-arg ref="messageSource" />
	</bean>

	<!-- Tx Advice -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <!-- the transactional semantics... -->
    <tx:attributes>
      <!-- all methods starting with 'get' and 'load' are read-only -->
      <tx:method name="get*" read-only="true"/>
      <tx:method name="load*" read-only="true"/>
      <!-- other methods use the default transaction settings -->
      <tx:method name="*"/>
    </tx:attributes>
  </tx:advice>
	
   <aop:config>
    <!-- Make all methods on Dao transactional  -->
     <aop:pointcut id="daoOperation" 
     	expression="execution(* org.jdal.dao.Dao.*(..))"/>
     <aop:advisor advice-ref="txAdvice" pointcut-ref="daoOperation"/>
  </aop:config>

</beans>

