<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdal="http://www.jdal.org/schema/jdal"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	default-init-method="init"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.jdal.org/schema/jdal http://www.jdal.org/schema/jdal/jdal-core.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">


	<context:property-placeholder location="classpath:jdbc.properties"/>

	
	<jdbc:embedded-database id="dataSource" type="H2">
        <jdbc:script location="classpath:create.sql"/>
        <jdbc:script location="classpath:import.sql"/>
    </jdbc:embedded-database>
		
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
      <property name="dataSource" ref="dataSource"/>
      <property name="packagesToScan" value="org.jdal.samples.model" />

	  <property name="jpaDialect">
        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
     </property>
     <property name="jpaVendorAdapter">
       <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
         <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
       </bean>
     </property>
    </bean>

	 <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      <property name="entityManagerFactory" ref="entityManagerFactory"/>
      <property name="dataSource" ref="dataSource"/>
    </bean>

	<!-- DAOs -->
	<jdal:service entity="org.jdal.samples.model.Category">
		<jdal:criteria name="categoryFilter" builder="categoryCriteriaBuilder" />
	</jdal:service>
	
	<bean id="categoryCriteriaBuilder" class="org.jdal.samples.dao.jpa.CategoryCriteriaBuilder" />
	
	<jdal:service entity="org.jdal.samples.model.Author">
		<jdal:criteria name="authorFilter" builder="authorCriteriaBuilder" />
	</jdal:service>
	
	<bean id="authorCriteriaBuilder" class="org.jdal.samples.dao.jpa.AuthorCriteriaBuilder" />
	
    <jdal:service entity="org.jdal.samples.model.Book">
   		<jdal:criteria name="book" builder="bookCriteriaBuilder"/>
    </jdal:service>
    
    <bean id="bookCriteriaBuilder" class="org.jdal.samples.dao.jpa.BookCriteriaBuilder"/>
       
    <jdal:service entity="org.jdal.samples.model.User" dao-class="org.jdal.samples.dao.jpa.UserJpaDao">
    	<jdal:criteria name="userFilter" builder="userCriteriaBuilder" />
    </jdal:service>
    
    <bean id="userCriteriaBuilder" class="org.jdal.samples.dao.jpa.UserCriteriaBuilder" />
    
    <bean id="contextPersistentService" class="org.jdal.logic.ContextPersistentManager" />
    
    <bean id="authService" class="org.jdal.auth.AuthManager">
    	<property name="userDao" ref="userDao" />
    	<property name="authStrategy" ref="authMd5" />
    </bean>
    
    <bean id="authMd5" class="org.jdal.auth.AuthHashMD5" />
    
    <!-- Tx Advice -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <!-- the transactional semantics... -->
    <tx:attributes>
      <!-- all methods starting with 'get' and 'load' are read-only -->
      <tx:method name="get*" read-only="true"/>
      <tx:method name="load*" read-only="true"/>
      <!-- other methods use the default transaction settings -->
      <tx:method name="*"/>
    </tx:attributes>
  </tx:advice>
	
   <aop:config>
    <!-- Make all methods on Dao transactional  -->
     <aop:pointcut id="txOperation" 
     	expression="execution(* org.jdal.dao.Dao.*(..)) or 
     				execution(* org.jdal.samples.dao.*.*(..)) or
     				execution(* org.jdal.auth.AuthService.*(..))" />
     <aop:advisor advice-ref="txAdvice" pointcut-ref="txOperation"/>
  </aop:config>
  
   <beans profile="mysql">
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
			<property name="driverClass" value="${jdbc.driverClassName}" />
			<property name="jdbcUrl" value="${jdbc.url}" />
			<property name="user" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="acquireIncrement" value="3" />
			<property name="minPoolSize" value="3" />
			<property name="maxPoolSize" value="10" />
			<property name="maxIdleTime" value="5" />
			<property name="numHelperThreads" value="5" />
			<property name="idleConnectionTestPeriod" value="10" />
			<property name="autoCommitOnClose" value="false" />
			<property name="preferredTestQuery" value="select 1;" />
			<property name="testConnectionOnCheckin" value="true" />
			<property name="checkoutTimeout" value="60000" />
		</bean>	
   </beans>

</beans>